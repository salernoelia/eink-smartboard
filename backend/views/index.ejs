<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Station Board - Zürich Morgental</title>
    <link rel="stylesheet" href="styles.css" />
  </head>
  <body>
    <div class="board">
      <h1>Abfahrten: Zürich Morgental</h1>
      <h2 id="current-time"><%= new Date().toLocaleString() %></h2>
      <table>
        <thead>
          <tr>
            <th>Nummer</th>
            <th>Kategorie</th>
            <th>Richtung</th>
            <th>Abfahrtszeit</th>
            <th>Plattform</th>
          </tr>
        </thead>
        <tbody id="departures-body">
          <% for (var i = 0; i < departures.length; i++) { %>
          <tr>
            <td><%= departures[i].number %></td>
            <td><%= resolveCategory(departures[i].category) %></td>
            <td><%= departures[i].to %></td>
            <td class="right-align">
              <%= formatTime(departures[i].stop.departure) %>
            </td>
            <td class="right-align">
              <%= departures[i].stop.platform || 'N/A' %>
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </body>
</html>

<script>
  function updateTime() {
    var currentTimeElement = document.getElementById("current-time");
    var now = new Date();
    currentTimeElement.textContent = now.toLocaleString([], {
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    });
  }

  function resolveCategory(categoryCode) {
    var categories = {
      B: "Bus",
      T: "Tram",
      Z: "Zug",
    };
    return categories[categoryCode] || categoryCode;
  }

  function formatTime(dateTimeString) {
    if (!dateTimeString) return "N/A";
    var date = new Date(dateTimeString);
    return date.toLocaleTimeString([], {
      hour: "2-digit",
      minute: "2-digit",
    });
  }

  function fetchDepartures() {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", "/api/departures", true);
    xhr.onload = function () {
      if (xhr.status >= 200 && xhr.status < 400) {
        var departures = JSON.parse(xhr.responseText);
        var departuresBody = document.getElementById("departures-body");
        var html = "";
        for (var i = 0; i < departures.length; i++) {
          html +=
            "<tr>" +
            "<td>" +
            departures[i].number +
            "</td>" +
            "<td>" +
            resolveCategory(departures[i].category) +
            "</td>" +
            "<td>" +
            departures[i].to +
            "</td>" +
            '<td class="right-align">' +
            formatTime(departures[i].stop.departure) +
            "</td>" +
            '<td class="right-align">' +
            (departures[i].stop.platform || "N/A") +
            "</td>" +
            "</tr>";
        }
        departuresBody.innerHTML = html;
      } else {
        console.error("Error fetching departures:", xhr.statusText);
      }
    };
    xhr.onerror = function () {
      console.error("Error fetching departures:", xhr.statusText);
    };
    xhr.send();
  }

  setInterval(updateTime, 1000);
  setInterval(fetchDepartures, 10000);

  // Initial fetch to populate the table immediately
  fetchDepartures();
</script>
